apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mapgis.fullname" . }}-mysql
  labels:
    {{- include "mapgis.labels" . | nindent 4 }}-mysql
    {{- include "mapgis.kindLabel" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "mapgis.selectorLabels" . | nindent 6 }}-mysql
  replicas: 1
  strategy: 
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "mapgis.selectorLabels" . | nindent 8 }}-mysql
    spec:
      containers:
      - name: {{ include "mapgis.fullname" . }}-mysql
        image: {{ include "mapgis.imageRegistry" . }}/{{ include "mapgis.imageNamespace" . }}/{{ include "mapgis.imageMySQL" . }}
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            cpu: 1
            memory: 1Gi
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - mysql -u root -p$MYSQL_ROOT_PASSWORD -e 'SELECT 1'
          initialDelaySeconds: 15
          timeoutSeconds: 20
          successThreshold: 1
          failureThreshold: 5
          periodSeconds: 30
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - mysql -u root -p$MYSQL_ROOT_PASSWORD -e 'SELECT 1'
          initialDelaySeconds: 15
          timeoutSeconds: 20
          successThreshold: 1
          failureThreshold: 5
          periodSeconds: 30
        ports:
        - containerPort: 3306
          name: http
        env:
        - name: MYSQL_DATABASE
          value: {{ include "mapgis.dbName" . }}
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "mapgis.fullname" . }}-secret
              key: mapgis.mysql.root.password
        args:
        - --innodb-buffer-pool-size=80M
        - --character-set-server=utf8mb4
        - --collation-server=utf8mb4_general_ci
        - --default-time-zone=+8:00
        - --lower-case-table-names=1
        - --max_connect_errors=1000
        - --max_connections=1000
        volumeMounts:
        - name: {{ include "mapgis.fullname" . }}-mysql-conf
          mountPath: /etc/mysql/conf.d
        - name: {{ include "mapgis.fullname" . }}-mysql-logs
          mountPath: /logs
        - name: {{ include "mapgis.fullname" . }}-mysql-volume
          mountPath: /var/lib/mysql
      restartPolicy: Always
      volumes:
      - name: {{ include "mapgis.fullname" . }}-mysql-conf
        persistentVolumeClaim: 
          claimName: pvc-{{ include "mapgis.fullname" . }}-mysql-conf
      - name: {{ include "mapgis.fullname" . }}-mysql-logs
        persistentVolumeClaim: 
          claimName: pvc-{{ include "mapgis.fullname" . }}-mysql-logs
      - name: {{ include "mapgis.fullname" . }}-mysql-volume
        persistentVolumeClaim: 
          claimName: pvc-{{ include "mapgis.fullname" . }}-mysql-volume
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "mapgis.fullname" . }}-mysql
  labels:
    {{- include "mapgis.kindLabel" . | nindent 4 }}
spec:
  selector:
    {{- include "mapgis.selectorLabels" . | nindent 4 }}-mysql
  type: NodePort
  ports:
  - name: http
    protocol: TCP
    port: 3306
    targetPort: 3306
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-{{ include "mapgis.fullname" . }}-mysql-conf
  labels:
    {{- include "mapgis.kindLabel" . | nindent 4 }}
spec:
  storageClassName: {{ include "mapgis.nfsStorageClassName" . }}
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-{{ include "mapgis.fullname" . }}-mysql-logs
  labels:
    {{- include "mapgis.kindLabel" . | nindent 4 }}
spec:
  storageClassName: {{ include "mapgis.nfsStorageClassName" . }}
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 500Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-{{ include "mapgis.fullname" . }}-mysql-volume
  labels:
    {{- include "mapgis.kindLabel" . | nindent 4 }}
spec:
  storageClassName: {{ include "mapgis.nfsStorageClassName" . }}
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi