<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zondy.mapgis.system.mapper.SysLogininforMapper">

    <resultMap type="SysLogininfor" id="SysLogininforResult">
        <id property="infoId" column="info_id"/>
        <result property="userName" column="user_name"/>
        <result property="status" column="status"/>
        <result property="ipaddr" column="ipaddr"/>
        <result property="browser" column="browser"/>
        <result property="os" column="os"/>
        <result property="msg" column="msg"/>
        <result property="loginTime" column="login_time"/>
    </resultMap>

    <insert id="insertLogininfor" parameterType="SysLogininfor">
        insert into sys_logininfor (user_name, status, ipaddr, browser, os, msg, login_time)
        values (#{userName}, #{status}, #{ipaddr}, #{browser}, #{os}, #{msg},
        <choose>
            <when test="_databaseId == 'sqlite'">
                (datetime(CURRENT_TIMESTAMP,'localtime'))
            </when>
            <otherwise>
                sysdate()
            </otherwise>
        </choose>
        )
    </insert>

    <select id="selectLogininforList" parameterType="SysLogininfor" resultMap="SysLogininforResult">
        select info_id, user_name, ipaddr, browser, os, status, msg, login_time from sys_logininfor
        <where>
            <if test="ipaddr != null and ipaddr != ''">
                <bind name="ipaddr_like" value="'%' + ipaddr + '%'"/>
                AND ipaddr like #{ipaddr_like}
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="userName != null and userName != ''">
                <bind name="user_name_like" value="'%' + userName + '%'"/>
                AND user_name like #{user_name_like}
            </if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                <choose>
                    <when test="_databaseId == 'sqlite'">
                        and login_time &gt;= #{params.beginTime}
                    </when>
                    <otherwise>
                        and date_format(login_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
                    </otherwise>
                </choose>
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                <choose>
                    <when test="_databaseId == 'sqlite'">
                        and login_time &lt;= #{params.endTime}
                    </when>
                    <otherwise>
                        and date_format(login_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
                    </otherwise>
                </choose>
            </if>
        </where>
        order by info_id desc
    </select>

    <delete id="deleteLogininforByIds" parameterType="Long">
        delete from sys_logininfor where info_id in
        <foreach collection="array" item="infoId" open="(" separator="," close=")">
            #{infoId}
        </foreach>
    </delete>

    <update id="cleanLogininfor">
        truncate table sys_logininfor
    </update>

    <update id="cleanLogininfor" databaseId="sqlite">
        delete
        from sys_logininfor;
        update sqlite_sequence
        SET seq = 0
        where name = 'sys_logininfor';
    </update>
</mapper>